@import url("https://fonts.googleapis.com/css2?family=Lato&display=swap");
@import url("https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css");

body {
  font-family: "Lato", sans-serif;
  background: rgb(46,62,93);
  background: linear-gradient(76deg, rgba(46,62,93,1) 0%, rgba(90,154,189,1) 61%, rgba(88,153,150,1) 100%);
  color: white;
}

.profile {
    height: 100vh;
}

.picprofile {
  border-radius: 50%;
}

.digital a {
  color: white;
}

.digital a:hover {
  /* color: navy; */
  transition: 2s;
}

.navbar a {
  /* color: rgb(46, 62, 93); */
  text-decoration: none;
  transition-property: font-weight, color;
}

.navbar a:hover {
  font-weight: 900;
  transition: 750ms;
}

.skills li {
  background-color: transparent;
  border: none;
}

/* Curtain Part */
.curtain {
  width: 100%; /* Ensures the component is the full screen width */
  height: 100vh; /* We're using this for demo purposes */
  overflow: hidden; /* Allows us to slide the panels outside the container without them showing */
}

.curtain__wrapper {
  width: 100%;
  height: 100%;
}

.curtain__panel {
  background: rgb(46, 62, 93);
  width: 50%; /* Each panel takes up half the container */
  height: 100vh; /* Used for demo purposes */
  float: left; /* Makes sure panels are side-by-side */
  position: relative; /* Needed to define the z-index */
  z-index: 2; /* Places the panels in front of the prize */
  transition: all 1s ease-out; /* Animates the sliding transition */
}

.curtain__panel--left {
  /* Styles for sliding the left panel */
}

.curtain__panel--right {
  /* Styles for sliding the right panel */
}

.curtain__prize {
  position: absolute; /* Forces the prize position into the container start */
  z-index: 1; /* Places the prize behind the panels, which are z-index 2 */
  width: 100%;
  height: 100%;
}
input[type="checkbox"] {
  position: absolute; /* Force the checkbox at the start of the container */
  cursor: pointer; /* Indicate the curtain is clickable */
  top: 70%;
  left: 10%;
  width: 10%; /* The checkbox is as wide as the component */
  height: 10%; /* The checkbox is as tall as the component */
  z-index: 100; /* Make sure the checkbox is on top of everything else */
  opacity: 1; /* Hide the checkbox */
}

/* When the checkbox is checked... */

/* Slide the first panel in */
input[type="checkbox"]:checked ~ div.curtain__panel--left {
  transform: translateX(0);
}

/* Slide the second panel in */
input[type="checkbox"]:checked ~ div.curtain__panel--right {
  transform: translateX(0);
}

/* Slide the panel to the left out of the container */
.curtain__panel--left {
  transform: translateX(-100%);
}

/* Slide the panel to the right out of the container */
.curtain__panel--right {
  transform: translateX(100%);
}
/* end of Curtain parts */

/* clock parts */
.clock {
  border-radius: 50%;
  background: url("../images/vectorpaint.svg") no-repeat center;
  background-size: 88%;
  height: 10em;
  padding-bottom: 31%;
  position: relative;
  width: 10em;
}

/* Not sure if needed!
.clock.simple:after {
  background: white;
  border-radius: 50%;
  content: "";
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 5%;
  height: 5%;
  z-index: 10;
}*/

.minutes-container,
.hours-container,
.seconds-container {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.hours {
  background:white;
  height: 20%;
  left: 48.75%;
  position: absolute;
  top: 30%;
  transform-origin: 50% 100%;
  width: 2.5%;
}

.minutes {
  background:white;
  height: 40%;
  left: 49%;
  position: absolute;
  top: 10%;
  transform-origin: 50% 100%;
  width: 2%;
}

.seconds {
  background: red;
  height: 45%;
  left: 49.5%;
  position: absolute;
  top: 14%;
  transform-origin: 50% 80%;
  width: 1%;
  z-index: 8;
}

@keyframes rotate {
  100% {
    transform: rotateZ(360deg);
  }
}

.hours-container {
  animation: rotate 43200s infinite linear;
}
.minutes-container {
  transition: transform 0.3s cubic-bezier(0.4, 2.08, 0.55, 0.44);
}
.seconds-container {
  transition: transform 1s linear;
}
